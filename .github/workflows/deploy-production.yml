name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-production-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Yarn and dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn global add @quasar/cli
          echo "::add-path::$(yarn global bin)"
          yarn --frozen-lockfile

      - name: Make .env file
        uses: SpicyPizza/create-envfile@v1
        with:
          file_name: .env
          envkey_API_URL: ${{ secrets.PRODUCTION_API_URL }}

      - name: Build
        run: quasar build
        env:
            API_URL: ${{ secrets.PRODUCTION_API_URL }}

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
            REMOTE_USER: ${{ secrets.REMOTE_USER }}
            SOURCE: "dist/spa/*"
            TARGET: "/var/www/budger.tech/public_html"
